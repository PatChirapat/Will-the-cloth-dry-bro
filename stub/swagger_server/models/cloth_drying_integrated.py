# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ClothDryingIntegrated(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, ts: datetime=None, lat: float=None, lon: float=None, sensor: str=None, source: str=None, value: float=None):  # noqa: E501
        """ClothDryingIntegrated - a model defined in Swagger

        :param id: The id of this ClothDryingIntegrated.  # noqa: E501
        :type id: int
        :param ts: The ts of this ClothDryingIntegrated.  # noqa: E501
        :type ts: datetime
        :param lat: The lat of this ClothDryingIntegrated.  # noqa: E501
        :type lat: float
        :param lon: The lon of this ClothDryingIntegrated.  # noqa: E501
        :type lon: float
        :param sensor: The sensor of this ClothDryingIntegrated.  # noqa: E501
        :type sensor: str
        :param source: The source of this ClothDryingIntegrated.  # noqa: E501
        :type source: str
        :param value: The value of this ClothDryingIntegrated.  # noqa: E501
        :type value: float
        """
        self.swagger_types = {
            'id': int,
            'ts': datetime,
            'lat': float,
            'lon': float,
            'sensor': str,
            'source': str,
            'value': float
        }

        self.attribute_map = {
            'id': 'id',
            'ts': 'ts',
            'lat': 'lat',
            'lon': 'lon',
            'sensor': 'sensor',
            'source': 'source',
            'value': 'value'
        }
        self._id = id
        self._ts = ts
        self._lat = lat
        self._lon = lon
        self._sensor = sensor
        self._source = source
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'ClothDryingIntegrated':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ClothDryingIntegrated of this ClothDryingIntegrated.  # noqa: E501
        :rtype: ClothDryingIntegrated
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this ClothDryingIntegrated.


        :return: The id of this ClothDryingIntegrated.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this ClothDryingIntegrated.


        :param id: The id of this ClothDryingIntegrated.
        :type id: int
        """

        self._id = id

    @property
    def ts(self) -> datetime:
        """Gets the ts of this ClothDryingIntegrated.

        Timestamp of the data  # noqa: E501

        :return: The ts of this ClothDryingIntegrated.
        :rtype: datetime
        """
        return self._ts

    @ts.setter
    def ts(self, ts: datetime):
        """Sets the ts of this ClothDryingIntegrated.

        Timestamp of the data  # noqa: E501

        :param ts: The ts of this ClothDryingIntegrated.
        :type ts: datetime
        """

        self._ts = ts

    @property
    def lat(self) -> float:
        """Gets the lat of this ClothDryingIntegrated.

        Latitude  # noqa: E501

        :return: The lat of this ClothDryingIntegrated.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat: float):
        """Sets the lat of this ClothDryingIntegrated.

        Latitude  # noqa: E501

        :param lat: The lat of this ClothDryingIntegrated.
        :type lat: float
        """

        self._lat = lat

    @property
    def lon(self) -> float:
        """Gets the lon of this ClothDryingIntegrated.

        Longitude  # noqa: E501

        :return: The lon of this ClothDryingIntegrated.
        :rtype: float
        """
        return self._lon

    @lon.setter
    def lon(self, lon: float):
        """Sets the lon of this ClothDryingIntegrated.

        Longitude  # noqa: E501

        :param lon: The lon of this ClothDryingIntegrated.
        :type lon: float
        """

        self._lon = lon

    @property
    def sensor(self) -> str:
        """Gets the sensor of this ClothDryingIntegrated.

        Sensor identifier  # noqa: E501

        :return: The sensor of this ClothDryingIntegrated.
        :rtype: str
        """
        return self._sensor

    @sensor.setter
    def sensor(self, sensor: str):
        """Sets the sensor of this ClothDryingIntegrated.

        Sensor identifier  # noqa: E501

        :param sensor: The sensor of this ClothDryingIntegrated.
        :type sensor: str
        """

        self._sensor = sensor

    @property
    def source(self) -> str:
        """Gets the source of this ClothDryingIntegrated.

        Source of the data  # noqa: E501

        :return: The source of this ClothDryingIntegrated.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source: str):
        """Sets the source of this ClothDryingIntegrated.

        Source of the data  # noqa: E501

        :param source: The source of this ClothDryingIntegrated.
        :type source: str
        """

        self._source = source

    @property
    def value(self) -> float:
        """Gets the value of this ClothDryingIntegrated.

        Value of the cloth drying data  # noqa: E501

        :return: The value of this ClothDryingIntegrated.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value: float):
        """Sets the value of this ClothDryingIntegrated.

        Value of the cloth drying data  # noqa: E501

        :param value: The value of this ClothDryingIntegrated.
        :type value: float
        """

        self._value = value
